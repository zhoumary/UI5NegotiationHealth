<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>Carousel</name>
    <derived/>
    <author>SAP SE</author>
    <documentation>The carousel allows the user to browse through a set of items by swiping right or left.
&lt;h3&gt;Overview&lt;/h3&gt;
The control is mostly used for showing a gallery of images, but can hold any sap.m control.
&lt;h3&gt;Structure&lt;/h3&gt;
The carousel consists of a the following elements:
&lt;ul&gt;
&lt;li&gt;Content area - displays the different items.&lt;/li&gt;
&lt;li&gt;Navigation - arrows to the left and right for switching between items.&lt;/li&gt;
&lt;li&gt;(optional) Paging - indicator at the bottom to show the current position in the set.&lt;/li&gt;
&lt;/ul&gt;
The paging indicator can be configured as follows:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;showPageIndicator&lt;/code&gt; - determines if the indicator is displayed.&lt;/li&gt;
&lt;li&gt;If the pages are less than 9, the page indicator is represented with bullets.&lt;/li&gt;
&lt;li&gt;If the pages are 9 or more, the page indicator is numeric.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pageIndicatorPlacement&lt;/code&gt; - determines where the indicator is located. Default (&lt;code&gt;sap.m.PlacementType.Bottom&lt;/code&gt;) - below the content.&lt;/li&gt;
&lt;/ul&gt;
Additionally, you can also change the location of the navigation arrows.
By setting &lt;code&gt;arrowsPlacement&lt;/code&gt; to &lt;code&gt;sap.m.CarouselArrowsPlacement.PageIndicator&lt;/code&gt;, the arrows will be located at the bottom by the paging indicator.
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;h4&gt; When to use&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The items you want to display are very different from each other.&lt;/li&gt;
&lt;li&gt;You want to display the items one after the other.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt; When not to use&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The items you want to display need to be visible at the same time.&lt;/li&gt;
&lt;li&gt;The items you want to display are uniform and very similar&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Responsive Behavior&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;On touch devices, navigation is performed with swipe gestures (swipe right or swipe left).&lt;/li&gt;
&lt;li&gt;On desktop, navigation is done with the navigation arrows.&lt;/li&gt;
&lt;li&gt;The paging indicator (when activated) is visible on each form factor.&lt;/li&gt;
&lt;/ul&gt;</documentation>
    <baseType>sap.ui.core/Control</baseType>
    <properties>
        <property group="Dimension" defaultValue="100%" type="sap.ui.core/CSSSize" name="height">
            <documentation>The height of the carousel. Note that when a percentage value is used, the height of the surrounding container must be defined.</documentation>
        </property>
        <property group="Dimension" defaultValue="100%" type="sap.ui.core/CSSSize" name="width">
            <documentation>The width of the carousel. Note that when a percentage value is used, the height of the surrounding container must be defined.</documentation>
        </property>
        <property group="Misc" defaultValue="false" type="sap.ui.core/boolean" name="loop">
            <documentation>Defines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa.</documentation>
        </property>
        <property group="Appearance" defaultValue="true" type="sap.ui.core/boolean" name="showPageIndicator">
            <documentation>Show or hide carousel's page indicator.</documentation>
        </property>
        <property group="Appearance" defaultValue="Bottom" type="sap.m/PlacementType" name="pageIndicatorPlacement">
            <documentation>Defines where the carousel's page indicator is displayed. Possible values are sap.m.PlacementType.Top, sap.m.PlacementType.Bottom. Other values are ignored and the default value will be applied. The default value is sap.m.PlacementType.Bottom.</documentation>
        </property>
        <property group="Appearance" defaultValue="true" type="sap.ui.core/boolean" name="showBusyIndicator">
            <documentation>Show or hide busy indicator in the carousel when loading pages after swipe.</documentation>
            <deprecation since="1.18.7">Since 1.18.7 pages are no longer loaded or unloaded. Therefore busy indicator is not necessary any longer.</deprecation>
        </property>
        <property group="Dimension" defaultValue="6em" type="sap.ui.core/CSSSize" name="busyIndicatorSize">
            <documentation>Size of the busy indicators which can be displayed in the carousel.</documentation>
            <deprecation since="1.18.7">Since 1.18.7 pages are no longer loaded or unloaded. Therefore busy indicator is not necessary any longer.</deprecation>
        </property>
        <property group="Appearance" defaultValue="Content" type="sap.m/CarouselArrowsPlacement" name="arrowsPlacement">
            <documentation>Defines where the carousel's arrows are placed. Default is &lt;code&gt;sap.m.CarouselArrowsPlacement.Content&lt;/code&gt; used to
place the arrows on the sides of the carousel. Alternatively &lt;code&gt;sap.m.CarouselArrowsPlacement.PageIndicator&lt;/code&gt; can
be used to place the arrows on the sides of the page indicator.</documentation>
        </property>
    </properties>
    <events>
        <event allowPreventDefault="false" name="loadPage">
            <documentation>Carousel requires a new page to be loaded. This event may be used to fill the content of that page</documentation>
            <deprecation since="1.18.7">Since 1.18.7 pages are no longer loaded or unloaded</deprecation>
            <parameters>
                <parameter type="sap.ui.core/string" name="pageId">
                    <documentation>Id of the page which will be loaded</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="unloadPage">
            <documentation>Carousel does not display a page any longer and unloads it. This event may be used to clean up the content of that page.</documentation>
            <deprecation since="1.18.7">Since 1.18.7 pages are no longer loaded or unloaded</deprecation>
            <parameters>
                <parameter type="sap.ui.core/string" name="pageId">
                    <documentation>Id of the page which will be unloaded</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="pageChanged">
            <documentation>This event is fired after a carousel swipe has been completed. It is triggered both by physical swipe events and through API carousel manipulations such as calling 'next', 'previous' or 'setActivePageId' functions.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="oldActivePageId">
                    <documentation>Id of the page which was active before the page change.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="newActivePageId">
                    <documentation>Id of the page which is active after the page change.</documentation>
                </parameter>
            </parameters>
        </event>
    </events>
    <aggregations default="pages">
        <aggregation cardinality="0..n" type="sap.ui.core/Control" name="pages">
            <documentation>The content which the carousel displays.</documentation>
        </aggregation>
    </aggregations>
    <associations>
        <association cardinality="0..1" type="sap.ui.core/Control" name="activePage">
            <documentation>Provides getter and setter for the currently displayed page. For the setter, argument may be the control itself, which must be member of the carousel's page list, or the control's id.
The getter will return the control id</documentation>
        </association>
    </associations>
    <methods>
        <method type="sap.m/Carousel" name="previous">
            <documentation>Call this method to display the previous page (corresponds to a swipe left). Returns 'this' for method chaining.</documentation>
        </method>
        <method type="sap.m/Carousel" name="next">
            <documentation>Call this method to display the next page (corresponds to a swipe right). Returns 'this' for method chaining.</documentation>
        </method>
    </methods>
</control>
